version: incident/v1
id: nh22ywy9dh84
name: Unauthenticated LFS requests for public repos are returning unexpected 401 errors
impact: minor
systems:
    - 8l4ygp009s5s
timeline:
    - ts: "2025-09-16 17:55:11"
      description: We are currently investigating this issue.
      investigating: true
    - ts: "2025-09-16 17:55:32"
      description: A recent change to our API routing inadvertently added an authentication requirement to the anonymous route for LFS requests. We're in the process of fixing the change, but in the interim retrying should eventually succeed.
      investigating: true
    - ts: "2025-09-16 18:02:37"
      description: Git Operations is experiencing degraded performance. We are continuing to investigate.
      investigating: true
    - ts: "2025-09-16 18:29:33"
      description: We have mitigated the issue and are monitoring the results
      investigating: true
    - ts: "2025-09-16 18:30:08"
      description: Between 16:26 UTC on September 15th and 18:30 UTC on September 16th, anonymous REST API calls to approximately 20 endpoints were incorrectly rejected because they were not authenticated. While this caused unauthenticated requests to be rejected by these endpoints, all authenticated requests were unaffected, and no protected endpoints were exposed.<br /><br />This resulted in 100% of requests to these endpoints failing at peak, representing less than 0.1% of GitHubâ€™s overall request volume. On average, the error rate for these endpoints was less than 50% and peaked at 100% for about 26 hours over September 16th. API requests to the impacted endpoints were rejected with a 401 error code. This was due to a mismatch in authentication policies, for specific endpoints, during a system migration.<br /><br />The failure to detect the errors was the result of the issue occurring for a low percentage of traffic.<br /><br />We mitigated the incident by reverting the policy in question, and correcting the logic associated with the degraded endpoints. We are working to improve our test suite to further validate mismatches, and refining our monitors for proactive detection.
      resolved: true
